# CI for Frontend Service

name: frontend

on:
  pull_request:
    branches:
      - master

    paths-ignore: [.github/workflows/]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: setup nodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: install dependencies
        run: cd Quiz-front && npm ci

      - name: Unit tests
        run: cd Quiz-front && npm test
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: setup nodeJS
        uses: actions/setup-node@v4

      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-node-modules-${{hashFiles('**/package-lock.json')}}

      - name: install dependencies
        run: cd Quiz-front && npm ci
      - name: Run eslint
        run: echo "run eslint"
  docker:
    runs-on: ubuntu-latest

    needs: [test, code-quality]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/quiz-frontend:${{github.run_id}}
          cache-from: type=registry,ref=${{secrets.DOCKER_USERNAME}}/quiz-frontend:cache
          cache-to: type=registry,ref=${{secrets.DOCKER_USERNAME}}/quiz-frontend:cache,mode=max
  updatek8s:
    runs-on: ubuntu-latest

    needs: docker
    steps:
      - name: Checkout k8s repo
        uses: actions/checkout@v4
        with:
          repository: bindasp/Quiz-deployment
          token: ${{secrets.TOKEN}}

      - name: Update image tag in kubernetes deployment manifest
        run: |
          cd k8s/frontend
          kustomize edit set image ${{secrets.DOCKER_USERNAME}}/quiz-frontend=${{secrets.DOCKER_USERNAME}}/quiz-frontend:${{github.run_id}}

      - name: Commit and push changes
        run: |
          git config --global user.email "${{vars.EMAIL}}"
          git config --global user.name "${{vars.USERNAME}}"
          git add k8s/frontend/kustomization.yaml
          git commit -m "[CI] Update frontend image tag"
          git push origin main
